---
name: Release

on:
  push:
    branches:
      - master
      - develop
  pull_request:

permissions:
  contents: write
  pull-requests: write
  issues: write


jobs:

  release:
    name: Release
    if: github.event_name == 'push' && github.ref != 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          activate-environment: true

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Lint imports with Ruff
        run: ruff check . --select I

      - name: Lint with Ruff
        run: ruff check .

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e
        with:
          config: '.markdownlint.json'
          globs: |
            README.md
            docs/**/*.md

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Create release and publish
        id: release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.1.1
          extra_plugins: |
            conventional-changelog-conventionalcommits@^4.4.0
            @semantic-release/git@^9.0.0
            @semantic-release/exec@^5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
