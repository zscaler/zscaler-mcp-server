[project]
name = "zscaler-mcp"
version = "0.1.0"
description = "Official Zscaler MCP Server"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
  { name = "Zscaler, Inc.", email = "devrel@zscaler.com" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "zscaler-sdk-python",
  "mcp[cli]>=1.9.1",
  "fastmcp>=2.5.1",
  "python-dotenv",
  "click",
  "uvicorn"
]

[project.scripts]
zscaler-mcp = "zscaler_mcp.server:main"

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "black",
  "mypy",
  "ipython",
  "ruff",
  "pytest-asyncio>=0.21.0",
  "langchain-openai>=0.3.28",
  "mcp-use[search]>=1.3.7"
]

[tool.poetry]
name = "zscaler-mcp"
version = "0.1.0"
description = "Official Zscaler MCP Server"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = ["Zscaler, Inc. <devrel@zscaler.com>"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
packages = [
  { include = "zscaler_mcp" }
]

[tool.poetry.dependencies]
python = "^3.11"
zscaler-sdk-python = "*"
mcp = {extras = ["cli"], version = "^1.9.1"}
fastmcp = "^2.5.1"
python-dotenv = "*"
click = "*"
uvicorn = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
black = "*"
mypy = "*"
ipython = "*"
ruff = "*"
pytest-asyncio = "^0.21.0"
langchain-openai = "^0.3.28"
mcp-use = {extras = ["search"], version = "^1.3.7"}

[tool.poetry.scripts]
zscaler-mcp = "zscaler_mcp.server:main"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
target-version = "py311"
line-length = 100

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning:websockets.*:",
    "ignore::DeprecationWarning:uvicorn.protocols.websockets.*:",
    "ignore::pydantic.PydanticDeprecatedSince20:langchain_core.*:"
]
